{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UACtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcC,MAAMC,OACzC,MAAMC,EAAOJ,OAAOH,EAAEI,cAAcG,KAAKD,OACnCE,EAASL,OAAOH,EAAEI,cAAcI,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,EAAWD,EAAQC,GAAY,EACpDC,EAAcD,EAAUP,GACrBS,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MAEQQ,YAAd,KACTlB,EAAAmB,OAAOC,QAAQ,uBAAqBH,QAAiBP,MAAW,CAAIW,SAAS,GAAQ,GACpFX,EAAM,IAEVY,OAAM,EAACL,SAAEA,EAAQP,MAAEA,MAESQ,YAAhB,KACTlB,EAAAmB,OAAOI,QAAQ,sBAAoBN,QAAeP,MAAW,CAAIW,SAAS,GAAQ,GACjFX,EAAM,IAEbH,GAASK,EAGX,SAASG,EAAcE,EAAUP,GAC/B,MAAMc,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEX,E,MAAUP,IAEpBmB,EAAO,C,SAAEZ,E,MAAUP,GAAQ,GAE5BA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSumbitFotm);\nfunction onSumbitFotm(e) {\n  e.preventDefault();\n  \n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position < amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        //один проміс, який виконується\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        //один проміс, який не виконується\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      });\n    delay += step;\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  }\n}\n\n\n\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","delay","value","step","amount","position1","createPromise","then","position","setTimeout","Notify","success","useIcon","catch","failure","shouldResolve","Math","random","Promise","resolve","reject"],"version":3,"file":"03-promises.742ef691.js.map"}